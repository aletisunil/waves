{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioref","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","artist","src","cover","name","chillHop","audio","color","uuidv4","LibrarySong","key","selectSongHandler","selectedSong","filter","state","Library","LibraryStatus","Nav","setLibraryStatus","faMusic","App","useState","timeUpdateHandler","useRef","data","endSongHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ac5fa9f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({currentSong,isPlaying,setIsPlaying,audioref,songInfo,setSongInfo,songs,setCurrentSong,setSongs}) => {\r\n  const activeLibraryHandler=(nextPrev)=>{\r\n    const newSongs=songs.map((song)=>{\r\n      if(song.id===nextPrev.id){\r\n          return{\r\n          ...song,active:true\r\n      }\r\n  }\r\n      else{\r\n          return{\r\n          ...song,active:false\r\n      }\r\n  }\r\n\r\n  })\r\n  setSongs(newSongs)\r\n}\r\n  const playSongHandler=()=>{\r\n    \r\n    if(isPlaying){\r\n      \r\n      audioref.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n    else{\r\n      \r\n      audioref.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n   };\r\n   \r\n   const getTime=(time)=>{\r\n    return(\r\n      Math.floor(time/60)+\":\"+(\"0\"+Math.floor(time%60)).slice(-2)\r\n    )\r\n   }\r\n   const dragHandler=(e)=>{\r\n     audioref.current.currentTime=e.target.value;\r\n     setSongInfo({...songInfo,currentTime:e.target.value})\r\n   }\r\n   const skipTrackHandler= async (direction)=>{\r\n     let currentIndex=songs.findIndex((song)=>song.id===currentSong.id)\r\n     if(direction==='skip-forward'){\r\n      await setCurrentSong(songs[(currentIndex+1)%songs.length])\r\n      activeLibraryHandler(songs[(currentIndex+1)%songs.length])\r\n     }\r\n     if(direction==='skip-backward'){\r\n       if((currentIndex-1)%songs.length===-1){\r\n        await setCurrentSong(songs[songs.length-1])\r\n        activeLibraryHandler(songs[songs.length-1])\r\n         if(isPlaying) audioref.current.play()\r\n         return\r\n       }\r\n      await setCurrentSong(songs[songs.length-1])\r\n      activeLibraryHandler(songs[songs.length-1])\r\n    }\r\n    \r\n    if(isPlaying) audioref.current.play()\r\n   }\r\n  \r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        \r\n        <input onChange={dragHandler} min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type=\"range\"></input> \r\n      \r\n        <p>{songInfo.duration ? getTime(songInfo.duration): \"0.00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-backward')}\r\n          className=\"skip-backward\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause: faPlay} />\r\n        <FontAwesomeIcon\r\n        onClick={()=>skipTrackHandler('skip-forward')}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song=({currentSong})=>{\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.artist} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React from \"react\";\r\n\r\n\r\nconst LibrarySong=({song,songs,setCurrentSong,id,key,audioref,isPlaying,setSongs})=>{\r\n    \r\n    \r\n    const selectSongHandler=async()=>{\r\n        const selectedSong=songs.filter(state=> state.id===id)\r\n        await setCurrentSong(selectedSong[0])\r\n        const newSongs=songs.map((song)=>{\r\n            if(song.id===id){\r\n                return{\r\n                ...song,active:true\r\n            }\r\n        }\r\n            else{\r\n                return{\r\n                ...song,active:false\r\n            }\r\n        }\r\n    \r\n        })\r\n        setSongs(newSongs)\r\n        audioref.current.play()\r\n        if(isPlaying) audioref.current.play()\r\n\r\n    };\r\n    \r\n    return(\r\n        <div onClick={selectSongHandler} className={`library-song ${song.active ? 'selected':\"\"}`}>\r\n            <img alt={song.artist} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n} \r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\n\r\nconst Library=({songs,setCurrentSong,audioref,isPlaying,setSongs,LibraryStatus})=>{\r\n    return(\r\n        <div className={`library ${LibraryStatus? \"active-library\":\"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song=>(\r\n                    <LibrarySong song={song} isPlaying={isPlaying} setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs} id={song.id} audioref={audioref} key={song.id}/>\r\n                ))}\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Nav=({LibraryStatus,setLibraryStatus})=>{\r\n    return(\r\n        <nav>\r\n        <h1>Waves</h1>\r\n        <button onClick={()=>setLibraryStatus(!LibraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic}/>\r\n        </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React,{useState,useRef} from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from './data';\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\"\n\nfunction App() {\n  const [songInfo,setSongInfo]=useState({\n    current:0,\n    duration:0,\n  });\n  const timeUpdateHandler=(e)=>{\n    const current=e.target.currentTime;\n    const duration=e.target.duration;\n    setSongInfo({...songInfo,current,currentTime:current,duration})\n  }\n  const audioref = useRef(null);\n  const [LibraryStatus,setLibraryStatus]=useState(false)\n  const [songs, setSongs]=useState(data());\n  const [currentSong,setCurrentSong]= useState(songs[0]);\n  const [isPlaying,setIsPlaying]=useState(false);\n  const endSongHandler=async()=>{\n    let currentIndex=songs.findIndex((song)=>song.id===currentSong.id)\n    await setCurrentSong(songs[(currentIndex+1)%songs.length])\n    if(isPlaying) audioref.current.play();\n  }\n  return (\n   <div className={`App ${LibraryStatus ? \"library-active\": \"\"}`}>\n      <Nav LibraryStatus={LibraryStatus} setLibraryStatus={setLibraryStatus}/>\n       <Song currentSong={currentSong}/>\n       <Player setSongs={setSongs} audioref={audioref} isPlaying={isPlaying} songs={songs} setCurrentSong={setCurrentSong} setIsPlaying={setIsPlaying} songInfo={songInfo} setSongInfo={setSongInfo} currentSong={currentSong}/>\n      <Library LibraryStatus={LibraryStatus} audioref={audioref} isPlaying={isPlaying} songs={songs} setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs}/>\n      <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioref} src={currentSong.audio} onEnded={endSongHandler}></audio>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}